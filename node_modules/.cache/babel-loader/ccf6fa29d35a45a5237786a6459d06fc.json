{"ast":null,"code":"import { API } from \"./../constants\";\nlet viajes = [];\nconst viajesService = {\n  async index() {\n    const fetchRes = await fetch(API + '/viaje/index', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    const response = await fetchRes.json();\n    viajes = response.data;\n    return viajes;\n  },\n\n  async indexEmpresa() {\n    const fetchRes = await fetch(API + '/viaje/index/empresa', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    const response = await fetchRes.json();\n    viajes = response.data;\n    return viajes;\n  },\n\n  async delete(id) {\n    const response = await fetch(API + '/viaje/' + id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    });\n    const fetchData = await response.json();\n\n    if (!fetchData.success) {\n      throw new Error('Error al eliminar el viaje :(');\n    }\n\n    return { ...fetchData.data\n    };\n  },\n\n  async store(data) {\n    const response = await fetch(API + '/viaje', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    });\n    const fetchData = await response.json();\n\n    if (!fetchData.success) {\n      return { ...fetchData\n      };\n    }\n\n    return { ...fetchData.data\n    };\n  }\n\n};\nexport default viajesService;","map":{"version":3,"sources":["C:/xampp/htdocs/front-andiamo/src/services/viajes.js"],"names":["API","viajes","viajesService","index","fetchRes","fetch","headers","credentials","response","json","data","indexEmpresa","delete","id","method","fetchData","success","Error","store","body","JSON","stringify"],"mappings":"AACA,SAAQA,GAAR,QAAkB,gBAAlB;AAEA,IAAIC,MAAM,GAAG,EAAb;AAEA,MAAMC,aAAa,GAAG;AAElB,QAAMC,KAAN,GAAc;AAEV,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,GAAG,cAAP,EAAuB;AAC/CM,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OADsC;AAI/CC,MAAAA,WAAW,EAAE;AAJkC,KAAvB,CAA5B;AAMA,UAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;AACAR,IAAAA,MAAM,GAAGO,QAAQ,CAACE,IAAlB;AACA,WAAOT,MAAP;AACH,GAbiB;;AAelB,QAAMU,YAAN,GAAqB;AAEjB,UAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,GAAG,sBAAP,EAA+B;AACvDM,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAD8C;AAIvDC,MAAAA,WAAW,EAAE;AAJ0C,KAA/B,CAA5B;AAMA,UAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;AACAR,IAAAA,MAAM,GAAGO,QAAQ,CAACE,IAAlB;AACA,WAAOT,MAAP;AACH,GA1BiB;;AA4BlB,QAAMW,MAAN,CAAaC,EAAb,EAAiB;AACb,UAAML,QAAQ,GAAG,MAAMH,KAAK,CAACL,GAAG,GAAG,SAAN,GAAkBa,EAAnB,EAAuB;AAC/CC,MAAAA,MAAM,EAAE,QADuC;AAE/CR,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAGL,4BAAoB;AAHf;AAFsC,KAAvB,CAA5B;AAQA,UAAMS,SAAS,GAAG,MAAMP,QAAQ,CAACC,IAAT,EAAxB;;AACA,QAAG,CAACM,SAAS,CAACC,OAAd,EAAuB;AACnB,YAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACH;;AACD,WAAO,EAAC,GAAGF,SAAS,CAACL;AAAd,KAAP;AACH,GA1CiB;;AA4ClB,QAAMQ,KAAN,CAAYR,IAAZ,EAAkB;AACd,UAAMF,QAAQ,GAAG,MAAMH,KAAK,CAACL,GAAG,GAAG,QAAP,EAAiB;AACzCc,MAAAA,MAAM,EAAE,MADiC;AAEzCK,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAFmC;AAGzCJ,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAGL,4BAAoB;AAHf;AAHgC,KAAjB,CAA5B;AASA,UAAMS,SAAS,GAAG,MAAMP,QAAQ,CAACC,IAAT,EAAxB;;AACA,QAAG,CAACM,SAAS,CAACC,OAAd,EAAuB;AACnB,aAAO,EAAC,GAAGD;AAAJ,OAAP;AACH;;AACD,WAAO,EAAC,GAAGA,SAAS,CAACL;AAAd,KAAP;AACH;;AA3DiB,CAAtB;AAiEA,eAAeR,aAAf","sourcesContent":["\r\nimport {API} from \"./../constants\";\r\n\r\nlet viajes = [];\r\n\r\nconst viajesService = {\r\n    \r\n    async index() {\r\n      \r\n        const fetchRes = await fetch(API + '/viaje/index', {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        });\r\n        const response = await fetchRes.json();\r\n        viajes = response.data;\r\n        return viajes;\r\n    },\r\n\r\n    async indexEmpresa() {\r\n      \r\n        const fetchRes = await fetch(API + '/viaje/index/empresa', {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        });\r\n        const response = await fetchRes.json();\r\n        viajes = response.data;\r\n        return viajes;\r\n    },\r\n\r\n    async delete(id) {\r\n        const response = await fetch(API + '/viaje/' + id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n               \r\n                'X-Requested-With': 'XMLHttpRequest'\r\n            }\r\n        });\r\n        const fetchData = await response.json();\r\n        if(!fetchData.success) {\r\n            throw new Error('Error al eliminar el viaje :(');\r\n        }\r\n        return {...fetchData.data};\r\n    },\r\n\r\n    async store(data) {\r\n        const response = await fetch(API + '/viaje', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n               \r\n                'X-Requested-With': 'XMLHttpRequest'\r\n            }\r\n        });\r\n        const fetchData = await response.json();\r\n        if(!fetchData.success) {\r\n            return {...fetchData};\r\n        }\r\n        return {...fetchData.data};\r\n    },\r\n\r\n\r\n\r\n};\r\n\r\nexport default viajesService;\r\n"]},"metadata":{},"sourceType":"module"}