{"ast":null,"code":"import React from 'react';\nimport { API, FETCH_HEADERS } from \"../constants\";\nlet userData = {\n  id: null,\n  rol: null,\n  email: null,\n  name: null\n};\n\nif (localStorage.getItem('user') !== null) {\n  userData = JSON.parse(localStorage.getItem('user'));\n}\n\nconst AuthContext = /*#__PURE__*/React.createContext({\n  user: userData,\n\n  updateAuthData(data) {}\n\n});\nAuthContext.displayName = \"AuthContext\";\nconst authService = {\n  async login(credenciales) {\n    const rta = await fetch(API + '/auth/login', {\n      headers: FETCH_HEADERS,\n      method: 'post',\n      body: JSON.stringify(credenciales),\n      credentials: \"include\"\n    });\n    const respuesta = await rta.json();\n\n    if (respuesta.success) {\n      userData = respuesta.user;\n      localStorage.setItem('user', JSON.stringify(userData));\n      return { ...userData\n      };\n    }\n\n    return false;\n  },\n\n  async logout() {\n    const rta = await fetch(API + '/auth/logout', {\n      headers: FETCH_HEADERS,\n      method: 'post',\n      credentials: \"include\"\n    });\n    const respuesta = await rta.json();\n\n    if (respuesta.success) {\n      userData = {\n        id_usuario: null,\n        id_rol: null,\n        email: null,\n        name: null\n      };\n      localStorage.removeItem('user');\n      return true;\n    }\n\n    return false;\n  },\n\n  getUserData() {\n    return { ...userData\n    };\n  }\n\n};\nexport default authService;\nexport { AuthContext };","map":{"version":3,"sources":["C:/xampp/htdocs/front-andiamo/src/services/auth.js"],"names":["React","API","FETCH_HEADERS","userData","id","rol","email","name","localStorage","getItem","JSON","parse","AuthContext","createContext","user","updateAuthData","data","displayName","authService","login","credenciales","rta","fetch","headers","method","body","stringify","credentials","respuesta","json","success","setItem","logout","id_usuario","id_rol","removeItem","getUserData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,aAAb,QAAiC,cAAjC;AAEA,IAAIC,QAAQ,GAAG;AACXC,EAAAA,EAAE,EAAE,IADO;AAEXC,EAAAA,GAAG,EAAE,IAFM;AAGXC,EAAAA,KAAK,EAAE,IAHI;AAIXC,EAAAA,IAAI,EAAC;AAJM,CAAf;;AAOA,IAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAApC,EAA0C;AACtCN,EAAAA,QAAQ,GAAGO,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACH;;AAGD,MAAMG,WAAW,gBAAGZ,KAAK,CAACa,aAAN,CAAoB;AACpCC,EAAAA,IAAI,EAAEX,QAD8B;;AAEpCY,EAAAA,cAAc,CAACC,IAAD,EAAO,CAAE;;AAFa,CAApB,CAApB;AAMAJ,WAAW,CAACK,WAAZ,GAA0B,aAA1B;AAEA,MAAMC,WAAW,GAAG;AAEhB,QAAMC,KAAN,CAAYC,YAAZ,EAA0B;AACtB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACrB,GAAG,GAAG,aAAP,EAAsB;AACzCsB,MAAAA,OAAO,EAAErB,aADgC;AAEzCsB,MAAAA,MAAM,EAAE,MAFiC;AAGzCC,MAAAA,IAAI,EAAEf,IAAI,CAACgB,SAAL,CAAeN,YAAf,CAHmC;AAKzCO,MAAAA,WAAW,EAAE;AAL4B,KAAtB,CAAvB;AAOA,UAAMC,SAAS,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAxB;;AACA,QAAGD,SAAS,CAACE,OAAb,EAAsB;AAElB3B,MAAAA,QAAQ,GAAGyB,SAAS,CAACd,IAArB;AAEAN,MAAAA,YAAY,CAACuB,OAAb,CAAqB,MAArB,EAA6BrB,IAAI,CAACgB,SAAL,CAAevB,QAAf,CAA7B;AACA,aAAO,EAAC,GAAGA;AAAJ,OAAP;AACH;;AACD,WAAO,KAAP;AACH,GAnBe;;AAqBhB,QAAM6B,MAAN,GAAe;AACX,UAAMX,GAAG,GAAG,MAAMC,KAAK,CAACrB,GAAG,GAAG,cAAP,EAAuB;AAC1CsB,MAAAA,OAAO,EAAErB,aADiC;AAE1CsB,MAAAA,MAAM,EAAE,MAFkC;AAG1CG,MAAAA,WAAW,EAAE;AAH6B,KAAvB,CAAvB;AAKA,UAAMC,SAAS,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAxB;;AACA,QAAGD,SAAS,CAACE,OAAb,EAAsB;AAClB3B,MAAAA,QAAQ,GAAG;AACP8B,QAAAA,UAAU,EAAE,IADL;AAEPC,QAAAA,MAAM,EAAE,IAFD;AAGP5B,QAAAA,KAAK,EAAE,IAHA;AAIPC,QAAAA,IAAI,EAAC;AAJE,OAAX;AAMAC,MAAAA,YAAY,CAAC2B,UAAb,CAAwB,MAAxB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAvCe;;AA0ChBC,EAAAA,WAAW,GAAG;AACV,WAAO,EAAC,GAAGjC;AAAJ,KAAP;AACH;;AA5Ce,CAApB;AA+CA,eAAee,WAAf;AAEA,SAAQN,WAAR","sourcesContent":["import React from 'react';\r\nimport {API, FETCH_HEADERS} from \"../constants\";\r\n\r\nlet userData = {\r\n    id: null,\r\n    rol: null,\r\n    email: null,\r\n    name:null\r\n};\r\n\r\nif(localStorage.getItem('user') !== null) {\r\n    userData = JSON.parse(localStorage.getItem('user'));\r\n}\r\n\r\n\r\nconst AuthContext = React.createContext({\r\n    user: userData,\r\n    updateAuthData(data) {}\r\n});\r\n\r\n\r\nAuthContext.displayName = \"AuthContext\";\r\n\r\nconst authService = {\r\n  \r\n    async login(credenciales) {\r\n        const rta = await fetch(API + '/auth/login', {\r\n            headers: FETCH_HEADERS,\r\n            method: 'post',\r\n            body: JSON.stringify(credenciales),\r\n         \r\n            credentials: \"include\"\r\n        });\r\n        const respuesta = await rta.json();\r\n        if(respuesta.success) {\r\n        \r\n            userData = respuesta.user;\r\n           \r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n            return {...userData}; \r\n        }\r\n        return false;\r\n    },\r\n\r\n    async logout() {\r\n        const rta = await fetch(API + '/auth/logout', {\r\n            headers: FETCH_HEADERS,\r\n            method: 'post',\r\n            credentials: \"include\"\r\n        });\r\n        const respuesta = await rta.json();\r\n        if(respuesta.success) {\r\n            userData = {\r\n                id_usuario: null,\r\n                id_rol: null,\r\n                email: null,\r\n                name:null\r\n            };\r\n            localStorage.removeItem('user');\r\n            return true; \r\n        }\r\n        return false;\r\n    },\r\n\r\n    \r\n    getUserData() {\r\n        return {...userData};\r\n    }\r\n};\r\n\r\nexport default authService;\r\n\r\nexport {AuthContext};\r\n"]},"metadata":{},"sourceType":"module"}